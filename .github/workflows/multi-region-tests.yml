name: Multi-Region Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - container: wii_ntscu_10
            iso: RZDE01.iso
            platform: WII
            region: NTSCU_10
            dolphin_memory: "0x80537560"
            iso_name: tpgzw.iso
          - container: wii_ntscu_12
            iso: RZDE01_2.iso
            platform: WII
            region: NTSCU_12
            dolphin_memory: "0x8051d5e0"
            iso_name: tpgzw.iso
          - container: wii_pal
            iso: RZDP01.iso
            platform: WII
            region: PAL
            dolphin_memory: "0x8051DEE0"
            iso_name: tpgzw.iso
          - container: wii_ntscj
            iso: RZDJ01.iso
            platform: WII
            region: NTSCJ
            dolphin_memory: "0x8051b460"
            iso_name: tpgzw.iso
          - container: gcn_ntscu
            iso: GZ2E01.iso
            platform: GCN
            region: NTSCU
            dolphin_memory: "0x80450580"
            iso_name: tpgz.iso
          - container: gcn_pal
            iso: GZ2P01.iso
            platform: GCN
            region: PAL
            dolphin_memory: "0x80452540"
            iso_name: tpgz.iso
          - container: gcn_ntscj
            iso: GZ2J01.iso
            platform: GCN
            region: NTSCJ
            dolphin_memory: "0x8044A6C0"
            iso_name: tpgz.iso
    container:
      image: ghcr.io/pheenoh/zsrtp-tpgz:${{ matrix.container }}
      options: --shm-size=128m --ulimit core=-1 --privileged=true
    name: ${{ matrix.platform }}-${{ matrix.region }} Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Move ISO
        run: mkdir -p ./isos/ && mv /${{ matrix.iso }} ./isos/${{ matrix.iso }}
      - name: Compiler Test
        run: |
          mkdir build && cd build && cmake .. -DPR_TEST=1 -DPLATFORM=${{ matrix.platform }} -DREGION=${{ matrix.region }} && make -j$(nproc) iso && cd ..
      - name: Boot Dolphin
        run: |
          dolphin-emu-nogui --platform=headless --video_backend=Null -e build/${{ matrix.iso_name }} &
          sleep 15
          /dme -c ${{ matrix.dolphin_memory }}
